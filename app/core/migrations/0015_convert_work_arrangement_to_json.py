# Generated by Django 5.2.5 on 2025-08-25 17:00

import json

from django.db import migrations


def convert_work_arrangement_to_json(apps, schema_editor):
    User = apps.get_model("core", "User")
    for user in User.objects.all():
        if user.preferred_work_arrangement:
            # This is a bit of a hack. The field is a CharField, but we are going  # noqa
            # to store a JSON string in it. The next migration will then
            # convert the field to a JSONField.
            if user.preferred_work_arrangement in ["remote", "hybrid", "onsite", "any"]:  # noqa
                user.preferred_work_arrangement = json.dumps(
                    [user.preferred_work_arrangement]
                )
                user.save()


def convert_json_to_work_arrangement(apps, schema_editor):
    User = apps.get_model("core", "User")
    for user in User.objects.all():
        if user.preferred_work_arrangement:
            try:
                # This is the reverse operation. It will take the JSON string
                # and convert it back to a plain string.
                data = json.loads(user.preferred_work_arrangement)
                if isinstance(data, list) and len(data) > 0:
                    user.preferred_work_arrangement = data[0]
                    user.save()
            except (json.JSONDecodeError, TypeError):
                # If the data is not a valid JSON string, or not a list,
                # we'll just leave it as is.
                pass


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0014_jobposting_details_updated_at"),
    ]

    operations = [
        migrations.RunPython(
            convert_work_arrangement_to_json,
            reverse_code=convert_json_to_work_arrangement,
        ),
    ]
